//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUI.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GUI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Лемма. Нумерация цепи является минимальной тогда и только тогда, когда она монотонна.
        ///Лемма. Если существует минимальная нумерация дерева t{V,E), то:
        ///1)	нумерация цепи монотонна,
        ///2)	нумерующие последовательности  поддеревьев   сплошные.
        ///Следствие. Минимальная нумерация дерева t(V,E) является минимальной и на каждом его поддереве.
        ///.
        /// </summary>
        internal static string _1 {
            get {
                return ResourceManager.GetString("_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Линейная укладка  дерева t(V,E) называется плоской, если она допускает геометрическую реализацию графа в полуплоскости. Соответствующая ей нумерация также называется плоской. Нумерация является плоской тогда и только тогда, когда между номерами вершин произвольной пары ребер (vi,vj) и (vk,vr) не существует соотношений: 
        ///(vi) &lt; (vk) &lt; (vj) &lt; (vr) или (vk) &lt; (vi) &lt; (vr) &lt; (vj).
        ///.
        /// </summary>
        internal static string _2 {
            get {
                return ResourceManager.GetString("_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Алгоритм построения минимальной нумерации произвольного де-рева имеет сложную рекурсивную структуру. Относительно простой алгоритм построения минимальной плоской нумерации можно рассматривать как способ приближенного решения задачи построения минимальной нумерации. Минимум в классе плоских нумераций может превосходить глобальный минимум не более чем в полтора раза.
        ///.
        /// </summary>
        internal static string _3 {
            get {
                return ResourceManager.GetString("_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon graph {
            get {
                object obj = ResourceManager.GetObject("graph", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static string index {
            get {
                return ResourceManager.GetString("index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon new_edge {
            get {
                object obj = ResourceManager.GetObject("new_edge", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon new_vertex {
            get {
                object obj = ResourceManager.GetObject("new_vertex", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
    }
}
